# Generated by Django 5.2.5 on 2025-10-22 08:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0013_populate_divisions'),
    ]

    operations = [
        migrations.AlterField(
            model_name='rank',
            name='direction',
            field=models.CharField(blank=True, choices=[('E', 'East'), ('W', 'West')], default='', help_text='Side of banzuke (E=East, W=West)', max_length=1),
        ),
        migrations.AlterField(
            model_name='rank',
            name='division',
            field=models.ForeignKey(help_text='Division this rank belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='ranks', to='game.division'),
        ),
        migrations.AlterField(
            model_name='rank',
            name='level',
            field=models.PositiveSmallIntegerField(help_text='Hierarchical level (1=highest/Yokozuna, 12=lowest/Banzuke-gai)'),
        ),
        migrations.AlterField(
            model_name='rank',
            name='order',
            field=models.PositiveSmallIntegerField(blank=True, default=0, help_text='Positional number within rank (e.g., Maegashira 1, 2, 3...)'),
        ),
        migrations.AlterField(
            model_name='rank',
            name='title',
            field=models.CharField(choices=[('Y', 'Yokozuna'), ('O', 'Ozeki'), ('S', 'Sekiwake'), ('K', 'Komusubi'), ('M', 'Maegashira'), ('J', 'Juryo'), ('Ms', 'Makushita'), ('Sd', 'Sandanme'), ('Jd', 'Jonidan'), ('Jk', 'Jonokuchi'), ('Mz', 'Mae-zumo'), ('Bg', 'Banzuke-gai')], help_text='Rank title short code (e.g., Y=Yokozuna, O=Ozeki)', max_length=2),
        ),
        migrations.AddConstraint(
            model_name='rank',
            constraint=models.CheckConstraint(condition=models.Q(('level__gte', 1), ('level__lte', 12)), name='rank_level_valid_range', violation_error_message='Rank level must be between 1 and 12.'),
        ),
        migrations.AddConstraint(
            model_name='rank',
            constraint=models.CheckConstraint(condition=models.Q(('order__gte', 0)), name='rank_order_non_negative', violation_error_message='Rank order must be non-negative.'),
        ),
        migrations.AddConstraint(
            model_name='rank',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('direction', ''), ('order', 0)), models.Q(('order__gt', 0), models.Q(('direction', ''), _negated=True)), _connector='OR'), name='rank_direction_required_with_order', violation_error_message='Direction required when order is greater than 0.'),
        ),
        migrations.AddConstraint(
            model_name='rank',
            constraint=models.UniqueConstraint(fields=('division', 'title', 'order', 'direction'), name='unique_rank_position'),
        ),
    ]
